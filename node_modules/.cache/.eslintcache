[{"C:\\react-app\\react-crypto-tracker\\src\\index.js":"1","C:\\react-app\\react-crypto-tracker\\src\\CryptoContext.js":"2","C:\\react-app\\react-crypto-tracker\\src\\App.js":"3","C:\\react-app\\react-crypto-tracker\\src\\Pages\\CoinPage.js":"4","C:\\react-app\\react-crypto-tracker\\src\\Pages\\HomePage.js":"5","C:\\react-app\\react-crypto-tracker\\src\\components\\Header.js":"6","C:\\react-app\\react-crypto-tracker\\src\\components\\CoinInfo.js":"7","C:\\react-app\\react-crypto-tracker\\src\\components\\CoinsTable.js":"8","C:\\react-app\\react-crypto-tracker\\src\\config\\api.js":"9","C:\\react-app\\react-crypto-tracker\\src\\components\\Banner\\Banner.js":"10","C:\\react-app\\react-crypto-tracker\\src\\config\\data.js":"11","C:\\react-app\\react-crypto-tracker\\src\\components\\Banner\\Carousel.js":"12","C:\\react-app\\react-crypto-tracker\\src\\components\\SelectButton.js":"13","C:\\react-app\\react-crypto-tracker\\src\\components\\Authentication\\AuthModal.js":"14","C:\\react-app\\react-crypto-tracker\\src\\firebase.js":"15","C:\\react-app\\react-crypto-tracker\\src\\config\\firebaseConfig.js":"16","C:\\react-app\\react-crypto-tracker\\src\\components\\Authentication\\Login.js":"17","C:\\react-app\\react-crypto-tracker\\src\\components\\Authentication\\Signup.js":"18","C:\\react-app\\react-crypto-tracker\\src\\components\\Alert.js":"19","C:\\react-app\\react-crypto-tracker\\src\\components\\Authentication\\UserSidebar.js":"20"},{"size":376,"mtime":1691337736470,"results":"21","hashOfConfig":"22"},{"size":1409,"mtime":1693294932788,"results":"23","hashOfConfig":"22"},{"size":784,"mtime":1691489630487,"results":"24","hashOfConfig":"22"},{"size":4457,"mtime":1691407908740,"results":"25","hashOfConfig":"22"},{"size":266,"mtime":1691337736467,"results":"26","hashOfConfig":"22"},{"size":1917,"mtime":1693295223092,"results":"27","hashOfConfig":"22"},{"size":3501,"mtime":1691337736468,"results":"28","hashOfConfig":"22"},{"size":6461,"mtime":1691484721272,"results":"29","hashOfConfig":"22"},{"size":630,"mtime":1691337736469,"results":"30","hashOfConfig":"22"},{"size":1506,"mtime":1691407064930,"results":"31","hashOfConfig":"22"},{"size":233,"mtime":1691337736470,"results":"32","hashOfConfig":"22"},{"size":2523,"mtime":1691337736468,"results":"33","hashOfConfig":"22"},{"size":812,"mtime":1691337736469,"results":"34","hashOfConfig":"22"},{"size":3290,"mtime":1693301514331,"results":"35","hashOfConfig":"22"},{"size":334,"mtime":1691485357069,"results":"36","hashOfConfig":"22"},{"size":351,"mtime":1691484981774,"results":"37","hashOfConfig":"22"},{"size":1856,"mtime":1691489469274,"results":"38","hashOfConfig":"22"},{"size":2201,"mtime":1691489490561,"results":"39","hashOfConfig":"22"},{"size":726,"mtime":1691489428226,"results":"40","hashOfConfig":"22"},{"size":3756,"mtime":1693300275859,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"woh1wo",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},"C:\\react-app\\react-crypto-tracker\\src\\index.js",[],["86","87"],"C:\\react-app\\react-crypto-tracker\\src\\CryptoContext.js",["88"],"import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { CoinList } from \"./config/api\";\r\nimport { auth, db } from \"./firebase\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nconst Crypto = createContext();\r\n\r\nconst CryptoContext = ({ children }) => {\r\n  const [currency, setCurrency] = useState(\"INR\");\r\n  const [symbol, setSymbol] = useState(\"₹\");\r\n  const [coins, setCoins] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [user,setUser]=useState(null);\r\n  const [alert,setAlert]=useState({\r\n    open:false,\r\n    message:\"\",\r\n    type:\"success\",\r\n  });\r\n\r\n\r\n  const fetchCoins = async () => {\r\n    setLoading(true);\r\n    const { data } = await axios.get(CoinList(currency));\r\n    console.log(data);\r\n\r\n    setCoins(data);\r\n    setLoading(false);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    onAuthStateChanged(auth,user=>{\r\n      if(user)setUser(user);\r\n      else setUser(null);\r\n    })\r\n  },[]);\r\n\r\n  useEffect(() => {\r\n    if (currency === \"INR\") setSymbol(\"₹\");\r\n    else if (currency === \"USD\") setSymbol(\"$\");\r\n  }, [currency]);\r\n\r\n  return (\r\n    <Crypto.Provider value={{ currency, setCurrency, symbol,coins,loading,fetchCoins,alert,setAlert,user,}}>\r\n      {children}\r\n    </Crypto.Provider>\r\n  );\r\n};\r\n\r\nexport default CryptoContext;\r\n\r\nexport const CryptoState = () => {\r\n  return useContext(Crypto);\r\n};\r\n","C:\\react-app\\react-crypto-tracker\\src\\App.js",[],"C:\\react-app\\react-crypto-tracker\\src\\Pages\\CoinPage.js",[],"C:\\react-app\\react-crypto-tracker\\src\\Pages\\HomePage.js",[],"C:\\react-app\\react-crypto-tracker\\src\\components\\Header.js",[],"C:\\react-app\\react-crypto-tracker\\src\\components\\CoinInfo.js",[],"C:\\react-app\\react-crypto-tracker\\src\\components\\CoinsTable.js",["89","90"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport {\r\n  Container,\r\n  createTheme,\r\n  TableCell,\r\n  LinearProgress,\r\n  ThemeProvider,\r\n  Typography,\r\n  TextField,\r\n  TableBody,\r\n  TableRow,\r\n  TableHead,\r\n  TableContainer,\r\n  Table,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { CoinList } from \"../config/api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CryptoState } from \"../CryptoContext\";\r\n\r\nexport function numberWithCommas(x) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nexport default function CoinsTable() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n\r\n  const { currency, symbol,coins,loading,fetchCoins } = CryptoState();\r\n\r\n  const useStyles = makeStyles({\r\n    row: {\r\n      backgroundColor: \"#16171a\",\r\n      cursor: \"pointer\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"#131111\",\r\n      },\r\n      fontFamily: \"Montserrat\",\r\n    },\r\n    pagination: {\r\n      \"& .MuiPaginationItem-root\": {\r\n        color: \"gold\",\r\n      },\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const darkTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#fff\",\r\n      },\r\n      type: \"dark\",\r\n    },\r\n  });\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    fetchCoins();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currency]);\r\n\r\n  const handleSearch = () => {\r\n    return coins.filter(\r\n      (coin) =>\r\n        coin.name.toLowerCase().includes(search) ||\r\n        coin.symbol.toLowerCase().includes(search)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <Container style={{ textAlign: \"center\" }}>\r\n        <Typography\r\n          variant=\"h4\"\r\n          style={{ margin: 18, fontFamily: \"Montserrat\" }}\r\n        >\r\n          Cryptocurrency Prices by Market Cap\r\n        </Typography>\r\n        <TextField\r\n          label=\"Search For a Crypto Currency..\"\r\n          variant=\"outlined\"\r\n          style={{ marginBottom: 20, width: \"100%\" }}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        />\r\n        <TableContainer component={Paper}>\r\n          {loading ? (\r\n            <LinearProgress style={{ backgroundColor: \"gold\" }} />\r\n          ) : (\r\n            <Table aria-label=\"simple table\">\r\n              <TableHead style={{ backgroundColor: \"#EEBC1D\" }}>\r\n                <TableRow>\r\n                  {[\"Coin\", \"Price\", \"24h Change\", \"Market Cap\"].map((head) => (\r\n                    <TableCell\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontWeight: \"700\",\r\n                        fontFamily: \"Montserrat\",\r\n                      }}\r\n                      key={head}\r\n                      align={head === \"Coin\" ? \"\" : \"right\"}\r\n                    >\r\n                      {head}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n\r\n              <TableBody>\r\n                {handleSearch()\r\n                  .slice((page - 1) * 10, (page - 1) * 10 + 10)\r\n                  .map((row) => {\r\n                    const profit = row.price_change_percentage_24h > 0;\r\n                    return (\r\n                      <TableRow\r\n                        onClick={() => history.push(`/coins/${row.id}`)}\r\n                        className={classes.row}\r\n                        key={row.name}\r\n                      >\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          scope=\"row\"\r\n                          style={{\r\n                            display: \"flex\",\r\n                            gap: 15,\r\n                          }}\r\n                        >\r\n                          <img\r\n                            src={row?.image}\r\n                            alt={row.name}\r\n                            height=\"50\"\r\n                            style={{ marginBottom: 10 }}\r\n                          />\r\n                          <div\r\n                            style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                          >\r\n                            <span\r\n                              style={{\r\n                                textTransform: \"uppercase\",\r\n                                fontSize: 22,\r\n                              }}\r\n                            >\r\n                              {row.symbol}\r\n                            </span>\r\n                            <span style={{ color: \"darkgrey\" }}>\r\n                              {row.name}\r\n                            </span>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {symbol}{\" \"}\r\n                          {numberWithCommas(row.current_price.toFixed(2))}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          align=\"right\"\r\n                          style={{\r\n                            color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\r\n                            fontWeight: 500,\r\n                          }}\r\n                        >\r\n                          {profit && \"+\"}\r\n                          {row.price_change_percentage_24h.toFixed(2)}%\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {symbol}{\" \"}\r\n                          {numberWithCommas(\r\n                            row.market_cap.toString().slice(0, -6)\r\n                          )}\r\n                          M\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          )}\r\n        </TableContainer>\r\n\r\n        {/* Comes from @material-ui/lab */}\r\n        <Pagination\r\n          count={(handleSearch()?.length / 10).toFixed(0)}\r\n          style={{\r\n            padding: 20,\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n          classes={{ ul: classes.pagination }}\r\n          onChange={(_, value) => {\r\n            setPage(value);\r\n            window.scroll(0, 450);\r\n          }}\r\n        />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","C:\\react-app\\react-crypto-tracker\\src\\config\\api.js",[],"C:\\react-app\\react-crypto-tracker\\src\\components\\Banner\\Banner.js",[],"C:\\react-app\\react-crypto-tracker\\src\\config\\data.js",[],"C:\\react-app\\react-crypto-tracker\\src\\components\\Banner\\Carousel.js",[],"C:\\react-app\\react-crypto-tracker\\src\\components\\SelectButton.js",[],"C:\\react-app\\react-crypto-tracker\\src\\components\\Authentication\\AuthModal.js",[],"C:\\react-app\\react-crypto-tracker\\src\\firebase.js",[],"C:\\react-app\\react-crypto-tracker\\src\\config\\firebaseConfig.js",[],"C:\\react-app\\react-crypto-tracker\\src\\components\\Authentication\\Login.js",[],"C:\\react-app\\react-crypto-tracker\\src\\components\\Authentication\\Signup.js",[],"C:\\react-app\\react-crypto-tracker\\src\\components\\Alert.js",[],"C:\\react-app\\react-crypto-tracker\\src\\components\\Authentication\\UserSidebar.js",["91"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport { CryptoState } from '../../CryptoContext';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { signOut } from 'firebase/auth';\r\nimport { auth } from '../../firebase';\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        width: 350,\r\n        padding: 25,\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        fontFamily: \"monospace\",\r\n      },\r\n      profile: {\r\n        flex: 1,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        gap: \"20px\",\r\n        height: \"92%\",\r\n      },\r\n      picture: {\r\n        width: 200,\r\n        height: 200,\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#EEBC1D\",\r\n        objectFit: \"contain\",\r\n      },\r\n      logout: {\r\n        height: \"8%\",\r\n        width: \"100%\",\r\n        backgroundColor: \"#EEBC1D\",\r\n        marginTop: 20,\r\n      },\r\n      watchlist: {\r\n        flex: 1,\r\n        width: \"100%\",\r\n        backgroundColor: \"grey\",\r\n        borderRadius: 10,\r\n        padding: 15,\r\n        paddingTop: 10,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        gap: 12,\r\n        overflowY: \"scroll\",\r\n      },\r\n});\r\n\r\n\r\n\r\n\r\nexport default function UserSidebar() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    right: false,\r\n  });\r\n\r\n\r\n  const {user,setAlert}=CryptoState();\r\n  \r\n\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n  const logout = () => {\r\n    signOut(auth);\r\n\r\n    setAlert({\r\n        open:true,\r\n        type:\"success\",\r\n        message:\"Logout Successful!\",\r\n    })\r\n    toggleDrawer();\r\n};\r\n\r\n\r\n  return (\r\n    <div>\r\n      {['right'].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Avatar onClick={toggleDrawer(anchor,true)} \r\n            style={{\r\n                height:38,\r\n                width:38,\r\n                marginLeft:15,\r\n                cursor:\"pointer\",\r\n                backgroundColor:\"#EEBC1D\",\r\n            }}\r\n            src={user.photoURL}\r\n            alt={user.displayName || user.email }\r\n          />\r\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\r\n           <div className={classes.container}>\r\n                 <div className={classes.profile}>\r\n                    <Avatar\r\n                        className={classes.picture}\r\n                        src={user.photoURL}\r\n                        alt={user.displayName || user.email}\r\n                    />\r\n                     <span\r\n                  style={{\r\n                    width: \"100%\",\r\n                    fontSize: 25,\r\n                    textAlign: \"center\",\r\n                    fontWeight: \"bolder\",\r\n                    wordWrap: \"break-word\",\r\n                  }}\r\n                >\r\n                  {user.displayName || user.email}\r\n                </span>\r\n                <div className={classes.watchlist}>\r\n                      <span style={{fontSize:15,textShadow:\"0 0 5px black\"}}>\r\n                         watchlist\r\n                      </span>\r\n                </div>\r\n                 </div>\r\n                 <Button variant=\"contained\" className={classes.logout} onClick={logout}>\r\n                   Log Out\r\n                 </Button>\r\n           </div>\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}",{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":4,"column":16,"nodeType":"98","messageId":"99","endLine":4,"endColumn":18},{"ruleId":"96","severity":1,"message":"100","line":19,"column":8,"nodeType":"98","messageId":"99","endLine":19,"endColumn":13},{"ruleId":"96","severity":1,"message":"101","line":20,"column":10,"nodeType":"98","messageId":"99","endLine":20,"endColumn":18},{"ruleId":"96","severity":1,"message":"102","line":2,"column":8,"nodeType":"98","messageId":"99","endLine":2,"endColumn":12},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'db' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'CoinList' is defined but never used.","'clsx' is defined but never used.","no-global-assign","no-unsafe-negation"]